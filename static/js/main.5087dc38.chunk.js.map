{"version":3,"sources":["constants/fontSize.js","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["fontSize","Title","Aside","Section","title","children","defaultPros","ButtonClick","Button","nameBtn","handelCangeStatistics","onClick","type","FeedbackOptions","options","onLeaveFeedback","map","option","StatisticsTitle","Item","Statistics","good","neutral","bad","total","positivePercentage","Notification","NotificationMessage","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Object","keys","prevState","Math","round","ReactDOM","render","StrictMode","theme","colors","white","black","document","getElementById"],"mappings":"uPAAaA,EACF,GADEA,EAGF,GCDJ,IAAMC,EAAK,oDACHD,EADG,OAGLE,EAAK,yG,OCDZC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACH,EAAD,WACE,cAACD,EAAD,UAAQG,IACPC,MAIPF,EAAQG,YAAc,CACpBF,MAAO,SAMMD,QChBFI,EAAW,iGAGTP,EAHS,oFCWTQ,EAXA,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,sBACzB,OACE,cAACH,EAAD,CAAaI,QAAS,kBAAMD,EAAsBD,IAAUG,KAAK,SAAjE,SACGH,KCWQI,EAbS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtBD,EAAQE,KAAI,SAAAC,GAAM,OAChB,cAAC,EAAD,CAEER,QAASQ,EACTP,sBAAuBK,GAFlBE,OCJEC,EAAe,mDACblB,EADa,OAGfmB,EAAI,mDACFnB,EADE,yBCqBFoB,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,eAACvB,EAAD,WACE,cAACgB,EAAD,yBAEA,+BACE,eAACC,EAAD,oBAAaE,KACb,eAACF,EAAD,uBAAgBG,KAChB,eAACH,EAAD,mBAAYI,KACZ,eAACJ,EAAD,qBAAcK,KACd,eAACL,EAAD,iCAA0BM,EAA1B,cCbD,IAAMC,EAAY,2ECGVC,MAHf,YAA2C,IAAZC,EAAW,EAAXA,QAC7B,OAAO,cAACF,EAAD,UAAeE,KCkDTC,EA9CH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAiBMC,EAAqB,WACzB,OAAOb,EAAOC,EAAUC,GAK1B,OACE,eAAC,EAAD,CAASnB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEU,QAASqB,OAAOC,KAAK,CAAEf,OAAMC,UAASC,QACtCR,gBAzBwB,SAACN,GAC7B,OAAQA,GACN,IAAK,OACHsB,GAAQ,SAAAM,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHL,GAAW,SAAAK,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHJ,GAAO,SAAAI,GAAS,OAAIA,EAAY,KAChC,MACF,QACE,WAeDH,IAAuB,EACtB,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,IACPT,mBAdCa,KAAKC,MAAOlB,EAAOa,IAAwB,OAiB9C,cAAC,EAAD,CAAcN,QAAS,0BCpC/BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,MATL,CACZC,OAAQ,CACNC,MAAO,UACPC,MAAO,YAMP,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.5087dc38.chunk.js","sourcesContent":["export const fontSize = {\r\n    small: 20,\r\n    medium: 24,\r\n    large: 30\r\n}","import styled from '@emotion/styled/macro'\r\nimport { fontSize } from '../../constants/fontSize'\r\nexport const Title = styled.h1`\r\n  font-size: ${fontSize.large}px;\r\n`\r\nexport const Aside = styled.aside`\r\n  background-color: #add88a;\r\n  padding: 10px;\r\n`\r\n","import React from 'react'\r\nimport { Title, Aside } from './Section.styled'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <Aside>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </Aside>\r\n  )\r\n}\r\nSection.defaultPros = {\r\n  title: 'Title',\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Section\r\n","import styled from '@emotion/styled/macro'\r\nimport { fontSize } from '../../constants/index'\r\n\r\nexport const ButtonClick = styled.button`\r\n  background-color: #137213;\r\n  margin-right: 5px;\r\n  font-size: ${fontSize.small}px;\r\n  text-transform: uppercase;\r\n  border-radius: 5px;\r\n  &:hover {\r\n    background-color: #ebf3eb;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { ButtonClick } from './Button.styled'\r\nimport PropTypes from 'prop-types'\r\nconst Button = ({ nameBtn, handelCangeStatistics }) => {\r\n  return (\r\n    <ButtonClick onClick={() => handelCangeStatistics(nameBtn)} type=\"button\">\r\n      {nameBtn}\r\n    </ButtonClick>\r\n  )\r\n}\r\nButton.propTypes = {\r\n  nameBtn: PropTypes.string.isRequired,\r\n  handelCangeStatistics: PropTypes.func.isRequired,\r\n}\r\nexport default Button\r\n","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\r\n  options.map(option => (\r\n    <Button\r\n      key={option}\r\n      nameBtn={option}\r\n      handelCangeStatistics={onLeaveFeedback}\r\n    />\r\n  ));\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import styled from '@emotion/styled/macro'\r\nimport { fontSize } from '../../constants/index'\r\n\r\nexport const StatisticsTitle = styled.h2`\r\n  font-size: ${fontSize.large}px;\r\n`\r\nexport const Item = styled.li`\r\n  font-size: ${fontSize.small}px;\r\n  margin-bottom: 5px;\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Aside } from '../Section/Section.styled'\r\nimport { StatisticsTitle, Item } from './Statistics.styled'\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <Aside>\r\n      <StatisticsTitle>Statistics</StatisticsTitle>\r\n\r\n      <ul>\r\n        <Item>Good: {good}</Item>\r\n        <Item>Neutral: {neutral}</Item>\r\n        <Item>Bad: {bad}</Item>\r\n        <Item>Total: {total}</Item>\r\n        <Item>Positive feedbaks: {positivePercentage}%</Item>\r\n      </ul>\r\n    </Aside>\r\n  )\r\n}\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n}\r\nexport default Statistics\r\n","import styled from '@emotion/styled/macro'\r\n\r\nexport const Notification = styled.p`\r\n  color: green;\r\n`\r\n","import { Notification } from './Notification.styled'\r\n\r\nfunction NotificationMessage({ message }) {\r\n  return <Notification>{message}</Notification>\r\n}\r\nexport default NotificationMessage\r\n","\r\nimport { useState} from 'react';\r\nimport Section from './components/Section/Section.jsx';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport Notification from './components/Notification/Notification.jsx';\r\n\r\nconst App = () => {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const handelCangeStatistics = (nameBtn) => {\r\n    switch (nameBtn) {\r\n      case 'good':\r\n        setGood(prevState => prevState + 1);\r\n        break;\r\n      case 'neutral':\r\n        setNeutral(prevState => prevState + 1);\r\n        break;\r\n      case 'bad':\r\n        setBad(prevState => prevState + 1);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const countTotalFeedback = () => {\r\n    return good + neutral + bad;\r\n  };\r\n  const countPositiveFeedbackPercentage = () => {\r\n    return Math.round((good / countTotalFeedback()) * 100);\r\n  };\r\n  return (\r\n    <Section title=\"Please leave feedback\">\r\n      <FeedbackOptions\r\n        options={Object.keys({ good, neutral, bad })}\r\n        onLeaveFeedback={handelCangeStatistics}\r\n      />\r\n      {countTotalFeedback() > 0 ? (\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={countTotalFeedback()}\r\n          positivePercentage={countPositiveFeedbackPercentage()}\r\n        />\r\n      ) : (\r\n        <Notification message={'No feedback given'} />\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {  ThemeProvider} from \"@emotion/react\";\r\nimport './index.css';\r\nimport App from './App';\r\nconst theme = {\r\n  colors: {\r\n    white: '#ffffff',\r\n    black: '#010101'\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n      </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}